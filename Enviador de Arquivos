import socket
import os
import time
import sys

from thread import *
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

host = ''
port = 1242
cl = 0 #contador do numero de clientes que ja usaram o servidor

pkt_list = []

def quit():

    s.close()
    exit(0)
	

def getSize(filename): #usado para retornar o tamanho do arquivo 
    st = os.stat(filename)
    return st.st_size


def ClientThread(conn, filename):

  photo = open(filename, 'rb')

  porc = 0.0 #porcentagem impressa
  sent = 0.0 #quantos bytes foram enviados ate o momento

  size = getSize(filename)    #tamanho do arquivo de nome filename
  read_size = size/float(100) #quanto o servidor vai ler por vez do arquivo
  iread = int(read_size)      #conversao para int do numero acima, para ser usado nas funcoes de comunicacao

  pkt = photo.read(iread) #le o primeiro pedaco do arquivo
  pkt_index = 0;          #index do pacote

  while (pkt): #enquanto ainda tem informacao para ler...
          
    porc = (sent/size) * 100   #calcula a porcentagem
    sent = sent + read_size    

    pkt_list.append(pkt_index)     #adiciona o numero do pacote atual na lista
    pkt_index = pkt_index + 1      #incrementa o numero do pacote

    print '{0:.2f} %\r'.format(porc), #formatacao da porcentagem para sempre imprimir na mesma linha
    time.sleep(0.2)                 #delay por questao de estetica

    conn.send(pkt)          #enviar o pacote para o cliente
    pkt = photo.read(iread) #le mais um pedaco do arquivo     

  photo.close() #fecha o arquivo
  print         #imprime uma nova linha

  print pkt_list #imprime a lista dos pacotes
 
  print "Done Sending to Client" + str(cl)
  conn.close()


def Server(filename):

  try:
      variavel = (host,port)
      s.bind( variavel )
  except socket.error as e:
      print e
      exit(0)

  s.listen(2)

  while True:

    conn, addr = s.accept()
    global cl #contador do numero de clientes que ja usaram o servidor
    cl = cl + 1
    
    start_new_thread(ClientThread,(conn,filename))

  conn.close()
  s.close()

def ServerMaster():
  
  Server('bucky.jpg')


ServerMaster()
